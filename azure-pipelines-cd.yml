# azure-pipelines-cd.yml
#
# Copyright (c) 2020 Radu Traian Jipa
# License: https://opensource.org/licenses/MIT
#
# Continuous deployment pipeline for the project.


trigger: none
pr: none

resources:
  pipelines:
  - pipeline: ci
    source: 'Azure Pipelines Experiments CI'
    branch: main
    trigger: true

stages:
- stage: ReleaseInit
  jobs:
  - job: Init
    steps:
    - template: build/import-variables.yml
      parameters:
        pipelineID: $(resources.pipeline.ci.pipelineID)
        runID: $(resources.pipeline.ci.runID)
    - bash: |
        echo pipelineID: $(resources.pipeline.ci.pipelineID)
        echo runName: $(resources.pipeline.ci.runName)
        echo runID: $(resources.pipeline.ci.runID)
        echo runURI: $(resources.pipeline.ci.runURI)
        echo sourceBranch: $(resources.pipeline.ci.sourceBranch)
        echo sourceCommit: $(resources.pipeline.ci.sourceCommit)
        echo sourceProvider: $(resources.pipeline.ci.sourceProvider)
        echo requestedFor: $(resources.pipeline.ci.requestedFor)
        echo requestedForID: $(resources.pipeline.ci.requestedForID)
        echo "$(sourceBranch)"
        echo "$(targetBranch)"

- stage: StagingPreview
  dependsOn: ReleaseInit
  condition: |
    and(succeeded(),
        or(eq(dependencies.ReleaseInit.outputs['Init.var.targetBranch'], 'main'),
           eq(variables['Build.Reason'], 'Manual')))
  jobs:
  - deployment: StagingPreview
    environment: 'StagingPreview'
    strategy:
      runOnce:
        deploy:
          steps:
          - bash: |
              echo "Hello, World!"

- stage: Staging
  dependsOn:
  - ReleaseInit
  - StagingPreview
  condition: |
    and(succeeded(),
        or(eq(variables['resources.pipeline.ci.sourceBranch'], 'refs/heads/main'),
           eq(variables['Build.Reason'], 'Manual')))
  jobs:
  - deployment: Staging
    environment: 'Staging'
    strategy:
      runOnce:
        deploy:
          steps:
          - bash: |
              echo "Hello, World!"
