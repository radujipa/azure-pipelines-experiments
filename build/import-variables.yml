# import-variables.yml
#
# Copyright (c) 2020 Radu Traian Jipa
# License: https://opensource.org/licenses/MIT
#
# Having exported and published variables using export-variable.yml and
# publish-variables.yml beforehand, this template loads all dynamic variables
# in the current pipeline for use across stages, jobs, steps, conditions, etc.


parameters:
  # Optional parameters.
  - name: pipelineID
    type: string
    default: ''

  - name: runID
    type: string
    default: ''


steps:
- task: DownloadBuildArtifacts@0
  displayName: 'Download Exported Variables'
  inputs:
    ${{if and(eq(parameters.pipelineID, ''), eq(parameters.runID, ''))}}:
      buildType: 'current'
      downloadType: 'single'
      artifactName: 'variables'
      downloadPath: '$(System.ArtifactsDirectory)'
    ${{if and(ne(parameters.pipelineID, ''), ne(parameters.runID, ''))}}:
      buildType: 'specific'
      buildVersionToDownload: 'specific'
      specificBuildWithTriggering: true
      project: '$(System.TeamProjectId)'
      pipeline: '${{parameters.pipelineID}}'
      buildId: '${{parameters.runID}}'
      downloadType: 'single'
      artifactName: 'variables'
      downloadPath: '$(System.ArtifactsDirectory)'

- bash: |
    for path in $(System.ArtifactsDirectory)/variables/*
    do
      name=$(basename $path)
      value=$(cat $path)
      echo "Setting '$name' to '$value'"
      echo "##vso[task.setvariable variable=$name;]$value"
      echo "##vso[task.setvariable variable=$name;isOutput=true;]$value"
    done
  displayName: 'Import Variables'
  name: variables
